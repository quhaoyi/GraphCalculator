//Author: Haoyi Qu
//Date: 2016/12/17

import java.util.*;
import javax.swing.*;
import java.awt.*;

//This class will open the graph panel for the calculator and draw axis and line on it
public class Graph extends JFrame{
	private double[] coefficient;
	private int offset;
	private int barLength;
	private int mode;
	
	//this is the constructor for the graph panel
	public Graph(double[] coefficient, int offset, int barLength, int mode){
		this.coefficient = coefficient;
		this.offset = offset;
		this.barLength = barLength;
		this.mode = mode;
	}
	
	
	//overwrite the method to draw on the JFrame. If want to add more features
	//add below
	public void paint(Graphics G) {
        super.paint(G);
        Graphics2D g = (Graphics2D) G;
        drawAxis(g);
        drawGraph(g);
        //add here
    }
	
	//this method will draw x and y axis
	public void drawAxis(Graphics2D g){
		g.setBackground(Color.white);
		g.drawLine(0, 800, 1600, 800);
		g.drawLine(800, 0, 800, 1600);
		//draw bar and number near it
		for(int i = 0; i <= 1600 / offset; i++){
			g.drawLine(i*offset, 800, i*offset, 800 - barLength);
			g.drawLine(800, i*offset, 800 + barLength, i*offset);
			g.drawString("0", 800, 800);
			if(i % 2 ==0 && i != 0){
				g.drawString(i/2 + "", 800 + i*offset/2, 800);
				g.drawString("-" + i/2 + "", 800 - i*offset/2, 800);
				g.drawString("-" + i/2 + "", 800, 800 + i*offset/2);
				g.drawString(i/2 + "", 800, 800 - i*offset/2);
			}
		}
	}
	
	//this method is in charge of drawing all the points based on the given function
	//the array coordinate contains all the points on that graph
	public void drawGraph(Graphics2D g){
		Coordinate[] coordinate = plotPoints();
		for(int i = 0; i < coordinate.length - 2; i++){
			g.drawLine(coordinate[i].x, coordinate[i].y, coordinate[i+1].x, coordinate[i+1].y);
		}
	}
	
	//this method will take a function and draw all the possible points on the graph
	private Coordinate[] plotPoints(){
		//assume the function starts from the left
		int x = 0;
		//An array to remember each point
		Coordinate[] coordinate = new Coordinate[1601];
		//this is to map all the points generated by all possible pixels
		for(double dx = -20; dx <= 20; dx = dx + 1.0/offset){
			double dy = 0;
			int y = 0;
			//get the y value corresponding to the x value
			if(mode == 1){
				for(int i = 0; i < coefficient.length; i++){
					double xchange = Math.pow(dx, i);
					dy = (dy + (coefficient[i] * 1.0) * xchange);
				}
				y = 800 - (int) (dy * offset);
			}else if(mode == 2){
				for(int i = 0; i < coefficient.length - 2; i++){
					double xchange = Math.pow(dx, i);
					dy = (dy + (coefficient[i] * 1.0) * xchange);
				}
				y = 800 - (int) (coefficient[coefficient.length - 2] 
						* Math.pow(coefficient[coefficient.length - 1], dy) * offset);
			}else if(mode == 3){
				
			}
			coordinate[x] = new Coordinate(x, y);
			x++;
		}
		return coordinate;
	}
}
